/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Maq;

import DAO.dao_tmaquina;
import Modelo.Conexiones;
import Modelo.Formateodedatos;
import Modelo.Tmaquina;
import Modelo.Usuarios;
import java.sql.Connection;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author GATEWAY1-
 */
public class Tipomaquina extends javax.swing.JInternalFrame {

    Connection cpt, rcpt, cobranza, cobb;
    Connection litecfdi;
    private Usuarios u;
    private ArrayList<Tmaquina> arra = new ArrayList<>();

    /**
     * Creates new form Materiales
     *
     * @param c
     * @param u
     */
    public Tipomaquina(Conexiones c, Usuarios u) {
        initComponents();
        cpt = c.getCpttpu();
        cobb = c.getCobranzatpuB();
        this.u = u;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pop = new javax.swing.JPopupMenu();
        JmBorrar = new javax.swing.JMenuItem();
        JmModificar = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        JtDetalle = new javax.swing.JTable();
        JtNombre = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();

        JmBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Cancel_icon-icons.com_54824.png"))); // NOI18N
        JmBorrar.setText("Eliminar");
        JmBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JmBorrarActionPerformed(evt);
            }
        });
        pop.add(JmBorrar);

        JmModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/edit-validated_40458.png"))); // NOI18N
        JmModificar.setText("Actualizar");
        JmModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JmModificarActionPerformed(evt);
            }
        });
        pop.add(JmModificar);

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Descripcion de maquinas");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/transfer_77884.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(1280, 720));

        JtDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        JtDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtDetalleMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(JtDetalle);

        JtNombre.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        JtNombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        JtNombre.setBorder(null);
        JtNombre.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        JtNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtNombreMousePressed(evt);
            }
        });
        JtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtNombreActionPerformed(evt);
            }
        });

        jSeparator2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/1486485588-add-create-new-math-sign-cross-plus_81186.png"))); // NOI18N
        jLabel7.setToolTipText("Agregar nueva descripcion");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel7MousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1244, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                            .addComponent(jSeparator2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JtNombreMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtNombreMousePressed
        JtNombre.setText("");
    }//GEN-LAST:event_JtNombreMousePressed

    private void JtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtNombreActionPerformed
        setrows();
    }//GEN-LAST:event_JtNombreActionPerformed

    /**
     * Hace la busqueda de registros de acuerdo a la busqueda por descripcion de
     * la maquina
     */
    private void setrows() {
        dao_tmaquina dt = new dao_tmaquina();
        arra = dt.get_allTmaquinas(cpt, JtNombre.getText());
        settable();
    }

    private void JtDetalleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtDetalleMousePressed
        if (evt.getButton() == 3) {// activar con clic derecho
            pop.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_JtDetalleMousePressed

    private void jLabel7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MousePressed
        String resp = despliegaMsjto_capture();
//        System.out.println(resp);
        if (resp != null) {
            setmsj_tobd(resp, "add");
        }
    }//GEN-LAST:event_jLabel7MousePressed

    private void JmModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JmModificarActionPerformed
        String resp = despliegaMsjto_capture();
//        System.out.println(resp);
        if (resp != null) {
            setmsj_tobd(resp, "mod");
        }
    }//GEN-LAST:event_JmModificarActionPerformed

    private void JmBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JmBorrarActionPerformed
        int input = JOptionPane.showConfirmDialog(null,
                "Estas seguro/a que quieres dar de baja la descripci√≥n?, "
                + "\n ", "Selecciona una opcion",
                JOptionPane.YES_NO_CANCEL_OPTION);
        if (input == 0) {
            dao_tmaquina dt = new dao_tmaquina();
            int row = JtDetalle.getSelectedRow();
            System.out.println(arra.get(row).getId_Tmaquina());
            if (dt.baja_Tmaquina(cpt, arra.get(row).getId_Tmaquina())) {
                JOptionPane.showMessageDialog(null, "Proceso completo");
                setrows();
            }
        }
    }//GEN-LAST:event_JmBorrarActionPerformed

    /**
     * Despliega la tabla de acuerdo a los registros obtenidos previamente
     */
    private void settable() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Descripcion de maquinas");
        model.addColumn("Status");
        model.setNumRows(arra.size());
        JtDetalle.setModel(model);
        for (int i = 0; i < arra.size(); i++) {
            String estado = (arra.get(i).getEstatus().equals("1")) ? "Activo" : "Inactivo";
            model.setValueAt(arra.get(i).getDescripcion(), i, 0);
            model.setValueAt(estado, i, 1);
        }
    }

    /**
     * Obtiene la respuesta del usuario mediante una pregunta con JOption
     *
     * @return
     */
    private String despliegaMsjto_capture() {
        return JOptionPane.showInputDialog(null,
                "Ingrese la nueva descripcion de la maquina",
                "Nueva descripci√≥n", JOptionPane.QUESTION_MESSAGE);
    }

    /**
     * Ejecuta la validacion y tipo de ejecucion en la bd, actualizacion de
     * informacion y manejo de nuevas descripciones
     *
     * @param resp
     * @param tipo
     */
    private void setmsj_tobd(String resp, String tipo) {
        if (resp != null) {
            Formateodedatos fd = new Formateodedatos();
            //Verifica que el campo de la descripcion no contenga informacion invalida
            if (!resp.isEmpty() && fd.verificaStringsSC(resp) && resp.length() < 250) {
                dao_tmaquina dt = new dao_tmaquina();
                Tmaquina m = new Tmaquina();
                m.setDescripcion(resp.toUpperCase());
                boolean flag = false;
                //Eleccion de tipo de funcion a ejecutar
                switch (tipo) {
                    case "add":
                        //Almacena en una variable la respuesta acerca de la ejecucion
                        flag = dt.new_Tmaquina(cpt, m);
                        break;
                    case "mod":
                        int row=JtDetalle.getSelectedRow();
                        m.setId_Tmaquina(arra.get(row).getId_Tmaquina());
                        flag = dt.update_Tmaquina(cpt, m);
                        break;
                }
                if (flag) {
                    JOptionPane.showMessageDialog(null, "Proceso completo");
                    setrows();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al completar, llama a sistemas");
                }
            } else {
                JOptionPane.showMessageDialog(null,
                        "Ingrese informacion valida y no el campo vacio, "
                        + "recuerda cuidar los caracteres y el limite de 250 caracteres",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem JmBorrar;
    private javax.swing.JMenuItem JmModificar;
    private javax.swing.JTable JtDetalle;
    public javax.swing.JTextField JtNombre;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu pop;
    // End of variables declaration//GEN-END:variables
}
